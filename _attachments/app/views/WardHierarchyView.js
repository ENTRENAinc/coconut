// Generated by CoffeeScript 1.6.2
var WardHierarchyView, _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

WardHierarchyView = (function(_super) {
  __extends(WardHierarchyView, _super);

  function WardHierarchyView() {
    _ref = WardHierarchyView.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  WardHierarchyView.prototype.el = '#content';

  WardHierarchyView.prototype.render = function() {
    this.$el.html("        This is the format for the shehia hierarchy. Note that a comma must separate every item unless it is the last item in a section. Coconut will warn you and not save if the format is invalid. Copy and paste the contents to <a href='http://jsonlint.com'>jsonlint</a> if you are having trouble getting the formatting correct.        <pre>        REGION: {<br/>            DISTRICT: {<br/>                CONSTITUAN: [<br/>                    SHEHIA/WARD<br/>                ]<br/>            }<br/>        }<br/>        </pre>        <textarea style='width:100%; height:200px;' id='wardHierarchy_json'>        </textarea>        <br/>        <button id='save' type='button'>Save</button>        <div id='message'></div>    ");
    return $('textarea').val(JSON.stringify(WardHierarchy.hierarchy, void 0, 2));
  };

  WardHierarchyView.prototype.events = {
    "click #save": "save"
  };

  WardHierarchyView.prototype.save = function() {
    var error, wardHierarchy, wardHierarchy_json;

    wardHierarchy_json = $("#wardHierarchy_json").val();
    try {
      JSON.parse(wardHierarchy_json);
      wardHierarchy = new WardHierarchy();
      return wardHierarchy.fetch({
        success: function() {
          return wardHierarchy.save("hierarchy", JSON.parse(wardHierarchy_json));
        },
        error: function() {
          return alert("Ward Hierarchy is not valid. Check for missing or extra commas. Pasting it into http://jsonlint.com can help");
        }
      });
    } catch (_error) {
      error = _error;
      return alert("Ward Hierarchy is not valid. Check for missing or extra commas. Pasting it into http://jsonlint.com can help");
    }
  };

  return WardHierarchyView;

})(Backbone.View);

/*
//@ sourceMappingURL=WardHierarchyView.map
*/
