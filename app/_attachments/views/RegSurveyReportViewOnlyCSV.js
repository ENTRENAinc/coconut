// Generated by CoffeeScript 1.6.3
var RegSurveyReportViewOnlyCSV, _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

RegSurveyReportViewOnlyCSV = (function(_super) {
  __extends(RegSurveyReportViewOnlyCSV, _super);

  function RegSurveyReportViewOnlyCSV() {
    _ref = RegSurveyReportViewOnlyCSV.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  RegSurveyReportViewOnlyCSV.prototype.el = "#content";

  RegSurveyReportViewOnlyCSV.prototype.events = {
    "keyup #search": "filter"
  };

  RegSurveyReportViewOnlyCSV.prototype.getRegistrationsAndFetch = function() {
    var db, registrations, results, _this;
    results = void 0;
    _this = this;
    registrations = void 0;
    results = new ResultCollection;
    results.model = Result;
    results.url = "result";
    db = $.couch.db("coconut");
    return db.view("coconut/byUUIDRegistration", {
      success: function(data) {
        var dataByUUID, idx, uuid;
        dataByUUID = [];
        for (idx in data.rows) {
          uuid = data.rows[idx].key;
          dataByUUID[uuid] = data.rows[idx].value;
        }
        _this.registrations = dataByUUID;
        data = [];
        _this.complete = 'true';
        if (_this.options.complete !== void 0 && _this.options.complete !== 'true') {
          _this.complete = 'false';
        }
        return results.fetch({
          "question": _this.quid,
          "complete": _this.complete,
          success: function(allResults) {
            var fields;
            fields = void 0;
            console.log(allResults.first());
            window.allResults = allResults;
            _this.results = allResults.where({
              question: _this.quid
            });
            fields = _.chain(_this.results).map(function(result) {
              return _.keys(result.attributes);
            }).flatten().uniq().value();
            if (this.quid === "Participant Survey-es") {
              _this.fields = _(fields).without("_id", "_rev", "test", "user", "question", "collection", "16Estasactualmenteasistiendoaunaescuelaouniversidad", "16ACuáleselnombredetuescuelaouniversidad", "16ACuáleselnombredetuescuelaouniversidad", "20Enlosúltimos12meseshassidosuspendidoadelaescuela", "17Estasactualmenteasistiendoaalgunodeestosprogramas", "18Hasrepetidouncursoenlaescuela", "18ACuálescursos", "21ACuálescursos", "23Hasidosuspendidoadelaescuela", "24Conrespectoatueducaciónquétegustaríalograrenelfuturo", "26Hasrealizadoalgunavezuntrabajoporpagaoganancia", "27Durantelaúltimasemanarealizastealgúntrabajoporpagaoganancia", "271Describeloquehaceseneltrabajoactual", "28Cuándocomenzasteeneltrabajoactual", "28Mes", "28Año", "29Enquélugarrealizasestetrabajo", "29EnquélugarOtros", "30Cuántashorastrabajasenundía", "31Cuántosdíastrabajasenunasemana", "32Enpromediocuántoganasenunasemana", "33Enestetrabajotúeres", "33OtroTúeres", "34Actualmenterealizasalgúntrabajoenelquenosetepagaonorecibesganancia", "34ADescribeloquehacesenestetrabajo", "35Cuándocomenzasteatrabajarenestetrabajo", "35Mes", "35Año", "36Enquélugarrealizasestetrabajo", "36EnquélugarrealizasestetrabajoOtros", "37Cuántashorastrabajasenundía", "38Cuántosdíastrabajasenunasemana", "39Enestetrabajotúeres", "39EnestetrabajotúeresOtro", "40Hasbuscadounnuevoomejorempleoenelúltimomes", "", "42Hasparticipadoenalgúnprogramadedesarrollodeempleo", "43Conquéfrecuenciatepreocupaservíctimadeladelincuenciaentubarrio", "44Conquéfrecuenciatepreocupaservíctimadeladelincuenciaentuescuelaouniversidad", "45Enquémedidatuvidahasidoafectadaporladelincuencia", "46Entuopiniónladelincuenciaesunproblemagraveentubarrio", "47Tepreocupalapresenciadepandillasentubarrio", "48Lapreocupaciónporladelincuenciaocrimenteimpiderealizarlascosasquedeseashacerentubarrio", "49Hastenidoalgunavezunaovariasdelassiguientesexperienciasconlapolicía", "49AUnpolicíameamenazóverbalmente", "49BUnpolicíamecobródinerosinjustificación", "49CUnpolicíatomóalgoquepertenecíaamí", "49DUnpolicíamemaltratófísicamente", "50Hassidotransportadoenunapatrullapolicialporunaredadaoporsospechadelapolicíahaciati", "51Hassidodetenidoporlapolicíaporcualquiermotivo", "51ASucedióestoenlosúltimos12meses", "52HassidodetenidoporlaPolicíaacusadodecometeralgúndelito", "52ASucedióestoenlosúltimos12meses", "53AlgunodetusamigoshasidodetenidoalgunavezporlaPolicía", "53ASucedióestoenlosúltimos12meses", "54Enlosúltimos12meseshastomadoalgodeunatiendasinpagarporella", "55Enlosúltimos12meseshasparticipadoenalgunapeleaoriña", "56Enlosúltimos12meseshasllevadouncuchillopuñalomachete", "56AEncuáleslugarespasó", "57Enlosúltimos12meseshasllevadounarmadefuego", "57ASilarespuestaesafirmativaencuáleslugarespasó", "58Enlosúltimos12meseshasvistoaalguienqueestabasiendoapuñaladocortadoobaleado", "58AEncuáleslugarespasó", "59Enlosúltimos12mesesalguientehaamenazadoconuncuchilloounapistola", "59AEncuáleslugarespasó", "60Enlosúltimos12mesesalguientehacortadooapuñaladotangravementequetuvistequeiraunmédico", "60ASilarespuestaesafirmativaencuáleslugarespasó", "61Enlosúltimos12mesesalguientehadisparadoconunarmadefuego", "61AEncuáleslugarespasó", "62Enlosúltimos12meseshasamenazadoaalguienconcortarleapuñalarleodispararle", "62AEncuáleslugarespasó", "63Enlosúltimos12meseshasamenazadoaalguienconuncuchillooarma", "63AEncuáleslugarespasó", "64Enlosúltimos12meseshascortadooapuñaladoaalguien", "64AEncuáleslugarespasó", "65Enlosúltimos12meseslehasdisparadoaalguien", "65AEncuáleslugarespasó", "66Enlosúltimos12meseshastenidoalgúnamigoomiembrodetufamiliaquelehandisparadocortadooapuñalado", "67Hasdañadoodestruidoapropósitoartículosquenotepertenecen", "68Algunavezhassidoatacadoorobado", "69Algunavezhasatacadoorobadoaalguien", "70Algunavezhassidosecuestrado", "71Algunavezhassecuestradoaalguien", "72AlgunavezhasrobadoalgodeunatiendaoalgoquenotepertenecíaqueteníaunvalormenordeRD$200", "73AlgunavezharobadoalgodeunatiendaoalgoquenotepertenecíaqueteníaunvalormayordeRD$200incluyendocarros", "74Algunavezhasvendidooayudadoavenderdrogas", "75Hasestadoinvolucradoenunapandilla", "75AActualmenteestásinvolucradoenunapandilla", "76Compartestiempooterelacionasconmiembrosdeunapandilla", "76AEncuáleslugarespasó", "77Enlosúltimos12meseshashabladoocompartidoconalguienborrachooqueestabadrogado", "78Algunavezhastomadounabebidaalcohólica–unacopavasoenteronosólounsorbo", "78AEnlosúltimos12meseshasconsumidoalcohol", "78BEnlosúltimos12meseshastomadocincovasoscopasomásdebebidasalcohólicasenelmismodía", "79Hasprobadoalgunavezcualquieradeestasdrogasmarihuanacocaínaheroínapastillascrackcementoocualquierotracosaparadrogarse", "80Hasusadoenalgunaocasiónunaagujaparainyectartedroga", "81Marcaelnombredelasdrogasquehayasprobadoenalgúnmomento", "81AMarihuana", "81BCrack", "81CCocaínaenpolvo", "81DHeroína", "81EMetanfetaminaocristal", "81FÉxtasisMDMA", "81GInhalantescomopegamentocementopinturaspray", "81HNoresponde", "81IOtra", "82Marcaelnombredelasdrogasquehayasprobadoenlosúltimos12meses", "82AMarihuana", "82BCrack", "82CCocaínaenpolvo", "82DHeroína", "82EMetanfetaminaocristal", "82FÉxtasisMDMA", "82GInhalantescomopegamentocementopinturaspray", "81HNoresponde", "82IOtra", "83Encasodequehayasprobadoalgunadrogaleecadanombreydinosquéedadteníaslaprimeravezquelaprobaste", "83AMarihuana", "83BCrack", "83CCocaínaenpolvo", "83DHeroína", "83EMetanfetaminaocristal", "83FÉxtasisMDMA", "83GInhalantescomopegamentocementopinturaspray", "83HOtraand83HOtradroga", "84Algunavezhastenidorelacionessexuales", "85Quéedadteníaslaprimeravezquetuvisterelacionessexuales", "86Conquiéneshastenidorelacionessexuales", "87Concuántaspersonasdiferenteshastenidorelacionessexualesenlosúltimos12meses", "88Laúltimavezquetuvisterelacionessexualestuotucompañeroautilizóuncondón", "89LaúltimavezquetuvisterelacionessexualescuálmétodousasteotucompañeroaparaprevenirelembarazoSeleccionesólounaopción", "89Otro", "90Algunavezalguientehaobligadoatenerrelacionessexuales", "91Algunavezhastenidorelacionessexualespordinerobienescelularesviviendaetcoserviciosproteccióncomidaetc", "91ASilarespuestaesafirmativaCuándofuelaúltimavez", "92Siquisierascompraruncondóncreesquepodríasencontrarlo", "93Siquisierastenersexocreesqueseríascapazdeconvenceratuparejaqueuseuncondónencasoqueélellanoquiera", "94Tesientescapazdetenerunaconversaciónabiertayhonestasobresexoconsuspadres", "95Algunavezhastenidounaconversaciónabiertayhonestasobresexocontuspadres", "96AlgunaveztehanenseñadoacercadelasInfeccionesdetransmisiónsexual", "96ADóndehasrecibidoinformacióndelasInfeccionesdeTransmisiónSexual", "96AOtro", "97Algunavezlehanenseñadoacercadeprevencióndeembarazo", "97ADóndehasrecibidoinformacióndeprevencióndeembarazo", "97AOtro", "98AlgunavezlehanenseñadoacercalainfecciónporVIHSida", "98ADóndehasrecibidoinformacióndeVIHSida", "98AOtro", "81AMarihuana", "81BCrack", "81CCocaínaenpolvo", "81DHeroína", "81EMetanfetaminaocristal", "81FxtasisMDMA", "81FÉxtasisMDMA", "81GInhalantescomopegamentocementopinturaspray", "81HNoresponde", "81HOtraespecifica", "81IOtra", "81IOtradroga", "82AMarihuana", "82Algunavezhastenidorelacionessexuales", "82BCrack", "82CCocaínaenpolvo", "82DHeroína", "82EMetanfetaminaocristal", "82FxtasisMDMA", "82GInhalantescomopegamentocementopinturaspray", "82IOtra", "82IOtradroga", "83AMarihuana", "83BCrack", "83CCocaínaenpolvo", "83DHeroína", "83EMetanfetaminaocristal", "83FxtasisMDMA", "83GInhalantescomopegamentocementopinturaspray", "83HOtra", "83HOtradroga", "83Quéedadteníaslaprimeravezquetuvisterelacionessexuales", "35Año", "35EnquélugarrealizasestetrabajoOtros", "35Mes", "83AMarihuana", "83BCrack", "83CCocaínaenpolvo", "83DHeroína", "83EMetanfetaminaocristal", "83FxtasisMDMA", "83GInhalantescomopegamentocementopinturaspray", "83HOtra", "83HOtradroga", "83Quéedadteníaslaprimeravezquetuvisterelacionessexuales");
            } else {
              _this.fields = _(fields).without("_id", "_rev", "test", "user", "question", "collection");
            }
            return _this.render();
          }
        });
      },
      error: function(data) {
        return alert("Someting wrong");
      }
    });
  };

  RegSurveyReportViewOnlyCSV.prototype.initialize = function(options) {
    var key, urlParams, value;
    urlParams = [];
    this.$el.append('<div id="reportloader"><marquee ALIGN="Top" LOOP="infinite"  DIRECTION="right" style="font-size:24px; color:#FF8000">Cargando el informe. Por favor espera ...</marquee></div>');
    this.options = options;
    for (key in options) {
      value = options[key];
      this[key] = value;
      if (key !== "startDate" && key !== "endDate") {
        urlParams.push("" + key + "=" + value + "");
      }
    }
    this.urlParams = urlParams;
    return this.getRegistrationsAndFetch();
  };

  RegSurveyReportViewOnlyCSV.prototype.filter = function(event) {
    var id, query, row, _ref1, _results;
    query = this.$el.find("#search").val();
    _ref1 = this.searchRows;
    _results = [];
    for (id in _ref1) {
      row = _ref1[id];
      if (~row.indexOf(query) || query.length < 3) {
        _results.push(this.$el.find(".row-" + id).show());
      } else {
        _results.push(this.$el.find(".row-" + id).hide());
      }
    }
    return _results;
  };

  RegSurveyReportViewOnlyCSV.prototype.render = function() {
    var a, blob, csvContent, e, field, headers, headersNum, innerValue, isRegExist, regvals, regvalues, result, resval, total, uuid, _i, _j, _k, _l, _len, _len1, _len2, _len3, _ref1, _ref2, _ref3, _ref4;
    this.searchRows = {};
    total = 0;
    headers = [];
    regvals = null;
    isRegExist = false;
    headersNum = 0;
    if (this.results === void 0) {
      return;
    }
    _ref1 = this.results;
    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
      result = _ref1[_i];
      if (this['provider_id'] !== void 0 && result.get('provider_id') !== this['provider_id']) {
        continue;
      }
    }
    csvContent = "\uFEFF";
    csvContent += "Fecha,Nombre,Apellido,Apodo,Calleynumero,Provincia,Municipio,BarrioComunidad,";
    _ref2 = this.fields;
    for (_j = 0, _len1 = _ref2.length; _j < _len1; _j++) {
      field = _ref2[_j];
      innerValue = "";
      if (field === void 0) {
        innerValue = '';
      } else {
        innerValue = field.toString();
      }
      resval = innerValue.replace(/"/g, '""');
      if (resval.search(/("|,|\n)/g) >= 0) {
        resval = '"' + resval + '"';
      }
      csvContent += resval + ',';
    }
    csvContent += "\n";
    _ref3 = this.results;
    for (_k = 0, _len2 = _ref3.length; _k < _len2; _k++) {
      result = _ref3[_k];
      if (this['provider_id'] !== void 0 && result.get('provider_id') !== this['provider_id']) {
        continue;
      }
      isRegExist = false;
      uuid = result.get("uuid");
      if (this.registrations[uuid] !== void 0) {
        isRegExist = true;
        regvalues = this.registrations[uuid].replace(/[//]/g, '');
        regvalues = this.registrations[uuid].replace(/[//]/g, '');
        try {
          regvals = jQuery.parseJSON(regvalues);
          csvContent += '"' + regvals.Fecha + '"' + ',';
          csvContent += '"' + regvals.Nombre + '"' + ',';
          csvContent += '"' + regvals.Apellido + '"' + ',';
          csvContent += '"' + regvals.Apodo + '"' + ',';
          csvContent += '"' + regvals.Calleynumero + '"' + ',';
          csvContent += '"' + regvals.Provincia + '"' + ',';
          csvContent += '"' + regvals.Municipio + '"' + ',';
          csvContent += '"' + regvals.BarrioComunidad + '"' + ',';
        } catch (_error) {
          e = _error;
          isRegExist = false;
        }
      }
      if (isRegExist === false) {
        continue;
      }
      isRegExist = false;
      this.searchRows[result.id] = "";
      _ref4 = this.fields;
      for (_l = 0, _len3 = _ref4.length; _l < _len3; _l++) {
        field = _ref4[_l];
        innerValue = "";
        if (result.get(field) === void 0 || result.get(field) === null) {
          innerValue = '';
        } else {
          innerValue = result.get(field).toString();
        }
        resval = innerValue.replace(/"/g, '""');
        if (resval.search(/("|,|\n)/g) >= 0) {
          resval = '"' + resval + '"';
        }
        csvContent += resval + ',';
      }
      csvContent += "\n";
    }
    a = document.createElement('a');
    blob = new Blob([csvContent], {
      'type': 'text/csv;charset=utf-8'
    });
    a.href = window.URL.createObjectURL(blob);
    a.download = "report.csv";
    $('#reportloader').hide();
    return a.click();
  };

  return RegSurveyReportViewOnlyCSV;

})(Backbone.View);

/*
//@ sourceMappingURL=RegSurveyReportViewOnlyCSV.map
*/
